server.port=8080
spring.application.name=binary-search-api

// File: src/test/java/com/example/binarysearchapi/BinarySearchServiceTest.java
package com.example.binarysearchapi;

import com.example.binarysearchapi.dto.BinarySearchResponse;
import com.example.binarysearchapi.service.BinarySearchService;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

@SpringBootTest
public class BinarySearchServiceTest {

    @Autowired
    private BinarySearchService binarySearchService;

    @Test
    public void whenTargetFound_thenReturnCorrectIndex() {
        // Given
        List<Integer> array = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
        Integer target = 7;

        // When
        BinarySearchResponse response = binarySearchService.performBinarySearch(array, target);

        // Then
        assertTrue(response.getFound());
        assertEquals(6, response.getIndex());
    }

    @Test
    public void whenTargetNotFound_thenReturnNotFound() {
        // Given
        List<Integer> array = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
        Integer target = 11;

        // When
        BinarySearchResponse response = binarySearchService.performBinarySearch(array, target);

        // Then
        assertFalse(response.getFound());
        assertNull(response.getIndex());
    }

    @Test
    public void whenArrayUnsorted_thenSortsAndFindsTarget() {
        // Given
        List<Integer> array = Arrays.asList(9, 3, 7, 1, 5, 10, 8, 2, 4, 6);
        Integer target = 5;

        // When
        BinarySearchResponse response = binarySearchService.performBinarySearch(array, target);

        // Then
        assertTrue(response.getFound());
        // After sorting, 5 should be at index 4
        assertEquals(4, response.getIndex());
    }

    @Test
    public void whenEmptyArray_thenReturnNotFound() {
        // Given
        List<Integer> array = Arrays.asList();
        Integer target = 5;

        // When
        BinarySearchResponse response = binarySearchService.performBinarySearch(array, target);

        // Then
        assertFalse(response.getFound());
        assertNull(response.getIndex());
    }
}